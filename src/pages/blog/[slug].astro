---
export const prerender = true

// styles
import "../../styles/blog-post.scss"

import { getEntryBySlug, getCollection, type CollectionEntry } from "astro:content"
import { db, eq, Like } from "astro:db"

// layouts
import Layout from "../../layouts/Layout.astro"

// components
import TOC from "../../components/blog/TOC.astro"
import LikeBlog from "../../components/blog/LikeBlog.astro"

// utils
import { nonDraftPosts, simplifyDate } from "../../utils"

// TODO Getting blog
type Props = CollectionEntry<"blog">

export async function getStaticPaths() {
    const allPosts = await getCollection('blog');
    return allPosts.map(post => ({
        params: {
            slug: post.slug
        }
    }))
}

const { slug } = Astro.params
if (!slug) {
	Astro.redirect("/")
}

const post = await getEntryBySlug("blog", slug!)
if (!post) {
	Astro.redirect("/")
}

const { title, pubDate, image, description } = post!.data

const { Content, headings } = await post!.render()

const pageTitle = `Mohammed's blog | ${title}`

// TODO Like data of the current post
const likes = await db.select().from(Like).where(eq(Like.id, slug))
---

<Layout title={pageTitle} description={description} ogImageUrl={image}>
	<section id="blog-post" class="post">
		<div class="wrapper">
			<div class="post__head">
				<h1 class="post__title">{title}</h1>
				<div class="post__meta">
					<span class="post__author"
						>Mohammed |
					</span>
					<span class="post__date"
						>{simplifyDate(pubDate).simplifiedDate}</span
					>
				</div>

				{likes && <LikeBlog like={likes[0]} />}
			</div>

			<div class="post__toc">
				<TOC pageHeadings={headings} />
			</div>

			<div class="post__body">
				<div class="post__banner">
					<img src={image} alt={title} loading="lazy" />
				</div>

				<div class="post__content">
					<Content />
				</div>
			</div>

			<!-- old is github stuff inshaAllah build my own system later -->
			<!-- <div class="post__comments">
            </div> -->
		</div>
	</section>
</Layout>

<style lang="scss">
	.post__head {
		.post__title {
			font-size: 1.875rem;
			line-height: 2.25rem;
			font-weight: 700;
			text-align: center;
		}
		.post__meta {
			font-size: 0.875rem;
			line-height: 1.25rem;
			color: var(--gray);
			text-align: center;
			margin-top: 0.5rem;
		}
	}

	.post__body {
		margin: 1.25rem auto;
		.post__banner {
			margin: 0 auto;
			border-radius: 0.5rem;
			img {
				display: block;
				object-fit: cover;
				width: 100%;
				aspect-ratio: 2 / 1;

				border: 1px solid var(--border-color);
				border-radius: 0.5rem;
			}
		}
		.post__content {
			margin-top: 2rem;
			color: var(--text-color);
			// max-width: 65ch;
		}
	}

	.post__comments {
		// max-width: 65ch;
		margin: 1.25rem auto;
	}
</style>
