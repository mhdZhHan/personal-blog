---
const { slug, likes } = Astro.props
const postLikes = likes?.likes ?? 0
---

<div class="post-like">
	<button aria-label="Likes for post" id="likeBtn">
		<span>Likes</span>
		<span id="likesSpan">{postLikes}</span>
		<span class="heart">‚ù§Ô∏è‚Äçüî•</span>
	</button>
</div>

<style lang="scss">
	.post-like {
		margin-top: 1rem;
		display: flex;
		align-items: center;
		justify-content: center;

		button {
			border: 1px solid var(--border-color);
			outline: none;
			background: transparent;
			color: var(--grey);
			padding: 8px 16px;
			border-radius: 4px;
			cursor: pointer;
			transition: opacity 0.1s ease;

			display: flex;
			align-items: center;
			justify-content: center;
			gap: 0.25rem;

			&:active {
				opacity: 0.8;
			}

			.heart {
				filter: brightness(0.4);
				font-size: 16px;
			}
		}
	}
</style>

<script define:vars={{ slug }}>
	const likeBtn = document.getElementById("likeBtn")
	const likesSpan = document.getElementById("likesSpan")
	const existingLikes = parseInt(likesSpan.textContent)

	// Function to handle like button click
	const handleLikeButtonClick = async () => {
		try {
			// Call the API to like/unlike the post
			const res = await fetch("/api/blog/like", {
				method: "POST",
				body: JSON.stringify({ slug }),
			})
			if (!res.ok) {
				throw new Error("Failed to update likes")
			}
			const updatedLikesStr = await res.text()
			const updatedLikes = parseInt(updatedLikesStr)
			if (isNaN(updatedLikes)) {
				throw new Error("Invalid like count")
			}

			// Update UI based on the response
			if (likeBtn.classList.contains("liked")) {
				// If already liked, remove like
				likeBtn.classList.remove("liked")
				likesSpan.textContent = (existingLikes - 1).toString()
			} else {
				// If not liked, add like
				likeBtn.classList.add("liked")
				likesSpan.textContent = (existingLikes + 1).toString()
			}
		} catch (error) {
			console.error("Error updating likes:", error)
		}
	}

	// Attach click event listener to the like button
	likeBtn.addEventListener("click", handleLikeButtonClick)
</script>
