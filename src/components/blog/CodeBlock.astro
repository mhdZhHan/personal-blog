---
import { getLanguageIcon } from "@lib/languageIcons"

let language: string | undefined = undefined

if (Astro.slots.title) {
	const titleSlot = await Astro.slots.render("title")
	language = titleSlot.match(/language="([^"]+)"/)?.[1] ?? "unknown"
}
---

<div {...Astro.props} class="breezeWindow">
	{
		Astro.slots.title && (
			<div class="breezeWindow__header">
				<span class="title">
					<img
						src={getLanguageIcon(language)}
						alt="lang"
						class="language-icon"
					/>
					<slot name="title" />
				</span>
			</div>
		)
	}

	<div class="breezeWindow__body">
		<slot />
	</div>
</div>

<style lang="scss">
	html[data-theme="dark"] {
		--code-bg: #121212;
	}
	html[data-theme="cool"] {
		--code-bg: #dbd7caee;
	}

	.breezeWindow {
		border-radius: 2px;
		border: 1px solid var(--border-color);
		margin: 1.25em 0;
		@media all and (max-width: 768px) {
			margin: 1rem 0;
		}
		.breezeWindow__header {
			width: 100%;
			height: 40px;

			border-bottom: 1px solid var(--border-color);
			border-top-right-radius: 2px;
			border-top-left-radius: 2px;
			.title {
				height: 100%;
				display: inline-flex;
				align-items: center;
				font-size: .9375rem;

				padding-top: 1rem;
				padding-bottom: 1rem;
				padding-left: 0.5rem;
				padding-right: 1rem;

				border-top: 1px solid var(--gray);
				border-radius: 0.2rem;
				color: var(--title);

				background: var(--code-bg);

				.language-icon {
					display: block;
					width: 18px;
					height: 18px;
					margin-right: 0.5rem;
				}
			}
		}

		.breezeWindow__body {
			overflow: auto;
			padding: 1rem;
			font-size: 1rem;
			height: 100%;

			background: var(--code-bg);
		}
	}
</style>
