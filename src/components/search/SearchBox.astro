<div class="search-box">
	<form id="search-form">
		<div class="search-box__container">
			<div class="search-icon">
				<svg
					xmlns="http://www.w3.org/2000/svg"
					stroke-width="2"
					width="12"
					height="12"
					stroke="currentColor"
					stroke-linecap="round"
					stroke-linejoin="round"
					fill="none"
					viewBox="0 0 24 24"
					slot="prefix"
					aria-hidden="true"
				>
					<circle cx="11" cy="11" r="8"></circle>
					<path d="m21 21-4.3-4.3"></path>
				</svg>
			</div>

			<input
				type="text"
				name="search"
				id="search"
				data-post-filter-search=""
				spellcheck="false"
				autocomplete="off"
				placeholder="Search Posts"
			/>

			<div class="key">
				<kbd slot="suffix" class="indicator"> / </kbd>
				<script data-astro-exec="">
					;(function () {
						const key = "/"
						const selector = "[data-post-filter-search]"
						const target = document.querySelector(selector)

						if (target)
							document.addEventListener("keydown", (event) => {
								if (event.key === key)
									event.preventDefault(), target.focus()
							})
					})()
				</script>
			</div>
		</div>
	</form>

	<ul class="search-box__filter">
		<li>
			<label>
				<input aria-label="AI Filter" value="AI" type="checkbox" />
				<div class="value">AI</div>
			</label>
		</li>
		<li>
			<label>
				<input aria-label="Rust Filter" value="Rust" type="checkbox" />
				<div class="value">Rust</div>
			</label>
		</li>
		<li>
			<label>
				<input
					aria-label="Python Filter"
					value="Python"
					type="checkbox"
				/>
				<div class="value">Python</div>
			</label>
		</li>
		<li>
			<label>
				<input
					aria-label="Linux Filter"
					value="Linux"
					type="checkbox"
				/>
				<div class="value">Linux</div>
			</label>
		</li>
		<li>
			<label>
				<input
					aria-label="React Filter"
					value="React"
					type="checkbox"
				/>
				<div class="value">React</div>
			</label>
		</li>
		<li>
			<label>
				<input
					aria-label="Next js Filter"
					value="Next js"
					type="checkbox"
				/>
				<div class="value">Next js</div>
			</label>
		</li>
		<li>
			<label>
				<input
					aria-label="Hello world Filter"
					value="Hello world"
					type="checkbox"
				/>
				<div class="value">Hello world</div>
			</label>
		</li>
	</ul>
</div>

<style lang="scss">
	.search-box {
		margin-top: 0.75rem;

		padding: 1rem;
		background-color: transparent;
		border: 1px solid var(--border-color);
		border-radius: 0.25rem;

		display: flex;
		flex-direction: column;
		gap: 1rem;
		form {
			.search-box__container {
				position: relative;
				background-color: transparent;
				border: 1px solid var(--border-color);
				border-radius: 0.25rem;

				display: flex;
				align-items: center;
				justify-content: space-between;

				.search-icon {
					color: #73737380;
					position: absolute;
					top: 50%;
					left: 0.5rem;
					flex-shrink: 0;

					transform: translate(0, -50%) rotate(0) skew(0) skewY(0)
						scaleX(1) scaleY(1);
				}

				input {
					border: none;
					outline: none;
					display: block;

					padding-right: 2.5rem;
					padding-left: 1.75rem;
					padding-top: 0.3rem;
					padding-bottom: 0.3rem;
					background: transparent;
					border-radius: 0.25rem;
					flex-shrink: 0;
					flex: 1 1 0%;
					width: 100%;
					position: relative;
					color: inherit;
				}

				.key {
					color: #73737380;
					position: absolute;
					top: 50%;
					right: 0.5rem;
					flex-shrink: 0;

					transform: translate(0, -50%) rotate(0) skew(0) skewY(0)
						scaleX(1) scaleY(1);

					.indicator {
						color: rgb(163 163 163 / 1);
						font-size: 12px;

						padding-top: 0.125rem;
						padding-bottom: 0.125rem;
						padding-left: 0.5rem;
						padding-right: 0.5rem;

						border: 1px solid var(--border-color);
						border-radius: 0.125rem;
					}
				}
			}
		}

		.search-box__filter {
			display: flex;
			flex-wrap: wrap;
			gap: 0.5rem;

			li {
				label {
					padding: 0 0.5rem;
					color: rgb(115 115 115 / 1);
					background-color: rgb(23 23 23 / 1);
					border: 1px solid var(--border-color);
					border-radius: 0.25rem;
					display: flex;
					position: relative;
					input {
						border-radius: 0.25rem;
						appearance: none;
						cursor: pointer;
						position: absolute;
						inset: 0;
						&:checked {
							border: 1px solid #ffffff71;
						}
					}
					.value {
						transition-property: color, background-color,
							border-color, text-decoration-color, fill, stroke;
						transition-timing-function: cubic-bezier(
							0.4,
							0,
							0.2,
							1
						);
						transition-duration: 0.15s;
					}
					input:checked + .value {
						color: rgb(229 229 229 / 1);
					}
				}
			}
		}
	}
</style>

<script>
	//imports
	import DOMPurify from "dompurify"

	const form = document.querySelector("form")
	form?.addEventListener("submit", (event) => {
		event.preventDefault()

		const formData = new FormData(form)
		const searchTerm = DOMPurify.sanitize(
			formData.get("search")?.toString()
		)

		if (!searchTerm || searchTerm.length === 0) return

		const url = new URL("search/", window.location.origin)
		url.searchParams.set("q", searchTerm)
		window.location.assign(url.toString())
	})
</script>
