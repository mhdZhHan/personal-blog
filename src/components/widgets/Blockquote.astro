---
import { TriangleAlert, Check, Info, Ban, Lightbulb } from "lucide-astro";

interface Props {
  title?: string;
  type?: "warning" | "info" | "success" | "error";
}

const { title, type = "normal" } = Astro.props;

const IconComponent =
  {
    warning: TriangleAlert,
    info: Info,
    success: Check,
    error: Ban,
  }[type] || Lightbulb;
---

<div class={`block-quote-container ${type}`}>
  <div class="block-quote">
    <i class="block-quote__icon">
      <IconComponent size={18} />
    </i>
    {title ? <div class="block-quote__title">{title}</div> : ""}
  </div>
  <div class="block-quote-message">
    <slot />
  </div>
</div>

<style>
  html[data-theme="dark"] {
    .normal {
      color: rgb(255 255 255 / 1);
    }
    .info {
      background-color: #1e3a8a1a;
    }
    .success {
      background-color: #14532d1a;
    }
    .warning {
      background-color: #713f121a;
    }
    .error {
      background-color: #7f1d1d1a;
    }
    .block-quote-message {
      color: rgb(255 255 255 / 1);
    }
  }

  .block-quote-container {
    margin-top: 2rem;
    margin-bottom: 2rem;
    display: flex;
    flex-direction: column;
    border: 1px solid var(--title);
    color: rgb(0 0 0 / 1);
    border-radius: 0.375rem;
    padding: 0.75rem;
    @media all and (max-width: 640px) {
      padding: 1rem;
    }
    .block-quote {
      display: flex;
      align-items: center;
      .block-quote__icon {
        flex-shrink: 0;
      }
      .block-quote__title {
        margin-left: 0.5rem;
        font-weight: 700;
        @media all and (max-width: 640px) {
          margin-left: 0.75rem;
        }
      }
    }
  }

  .block-quote-message {
    margin-left: 2rem;
    color: rgb(0 0 0 / 1);
    p {
      color: inherit;
      font-size: inherit;
      margin: 0;
    }
    @media all and (max-width: 640px) {
      margin-left: 2.25rem;
    }
  }

  .info {
    border-color: rgb(59 130 246 / 1);
    background-color: rgb(239 246 255 / 1);
    color: rgb(59 130 246 / 1);
  }
  .success {
    border-color: rgb(34 197 94 / 1);
    background-color: rgb(240 253 244 / 1);
    color: rgb(34 197 94 / 1);
  }
  .warning {
    border-color: rgb(234 179 8 / 1);
    background-color: rgb(254 252 232 / 1);
    color: rgb(234 179 8 / 1);
  }
  .error {
    border-color: rgb(239 68 68 / 1);
    background-color: rgb(254 242 242 / 1);
    color: rgb(239 68 68 / 1);
  }
</style>
