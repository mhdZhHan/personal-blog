---
// SchemaOrg.astro
interface Props {
	type: "blog" | "website"
	title: string
	description: string
	pageUrl: string
	ogImageUrl: string | null
	publishDate?: string
	modifiedDate?: string
}

const {
	type,
	title,
	description,
	pageUrl,
	ogImageUrl,
	publishDate,
	modifiedDate,
} = Astro.props

const baseSchema = {
	"@context": "http://schema.org",
	author: {
		"@type": "Person",
		name: "Mohammed Shajahan",
		url: "https://www.mohammedsh.xyz",
	},
	publisher: {
		"@type": "Person",
		name: "Mohammed Shajahan",
		url: "https://www.mohammedsh.xyz",
	},
	url: pageUrl,
	name: title,
	description: description,
	image: ogImageUrl,
}

const blogPostSchema = {
	...baseSchema,
	"@type": "BlogPosting",
	headline: title,
	datePublished: publishDate,
	dateModified: modifiedDate || publishDate,
	mainEntityOfPage: {
		"@type": "WebPage",
		"@id": pageUrl,
	},
}

const webPageSchema = {
	...baseSchema,
	"@type": "WebPage",
}

const schema = type === "blog" ? blogPostSchema : webPageSchema
---

<script type="application/ld+json" set:html={JSON.stringify(schema)} />
